#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LCScheduler.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LCScheduleData")]
	public partial class ClientInfoDataClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProgressNote(ProgressNote instance);
    partial void UpdateProgressNote(ProgressNote instance);
    partial void DeleteProgressNote(ProgressNote instance);
    #endregion
		
		public ClientInfoDataClassDataContext() : 
				base(global::LCScheduler.Properties.Settings.Default.LCScheduleDataConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ClientInfoDataClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientInfoDataClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientInfoDataClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientInfoDataClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ProgressNote> ProgressNotes
		{
			get
			{
				return this.GetTable<ProgressNote>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgressNote")]
	public partial class ProgressNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ClientId;
		
		private System.DateTime _DateOfService;
		
		private System.Nullable<int> _SessionNumber;
		
		private System.DateTime _TimeStarted;
		
		private System.DateTime _TimeEnded;
		
		private string _NoteType;
		
		private System.Nullable<System.DateTime> _NextSession;
		
		private string _TreatmentGoalAddressed;
		
		private string _Interventions;
		
		private string _ClientResponse;
		
		private string _HomeworkAssignedToday;
		
		private string _HomeworkCompletedLastSession;
		
		private int _Appearance;
		
		private int _Behavior;
		
		private int _MoodAffect;
		
		private int _Cognitions;
		
		private bool _DangerToOthers;
		
		private string _DescribeDanger;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnDateOfServiceChanging(System.DateTime value);
    partial void OnDateOfServiceChanged();
    partial void OnSessionNumberChanging(System.Nullable<int> value);
    partial void OnSessionNumberChanged();
    partial void OnTimeStartedChanging(System.DateTime value);
    partial void OnTimeStartedChanged();
    partial void OnTimeEndedChanging(System.DateTime value);
    partial void OnTimeEndedChanged();
    partial void OnNoteTypeChanging(string value);
    partial void OnNoteTypeChanged();
    partial void OnNextSessionChanging(System.Nullable<System.DateTime> value);
    partial void OnNextSessionChanged();
    partial void OnTreatmentGoalAddressedChanging(string value);
    partial void OnTreatmentGoalAddressedChanged();
    partial void OnInterventionsChanging(string value);
    partial void OnInterventionsChanged();
    partial void OnClientResponseChanging(string value);
    partial void OnClientResponseChanged();
    partial void OnHomeworkAssignedTodayChanging(string value);
    partial void OnHomeworkAssignedTodayChanged();
    partial void OnHomeworkCompletedLastSessionChanging(string value);
    partial void OnHomeworkCompletedLastSessionChanged();
    partial void OnAppearanceChanging(int value);
    partial void OnAppearanceChanged();
    partial void OnBehaviorChanging(int value);
    partial void OnBehaviorChanged();
    partial void OnMoodAffectChanging(int value);
    partial void OnMoodAffectChanged();
    partial void OnCognitionsChanging(int value);
    partial void OnCognitionsChanged();
    partial void OnDangerToOthersChanging(bool value);
    partial void OnDangerToOthersChanged();
    partial void OnDescribeDangerChanging(string value);
    partial void OnDescribeDangerChanged();
    #endregion
		
		public ProgressNote()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfService", DbType="DateTime NOT NULL")]
		public System.DateTime DateOfService
		{
			get
			{
				return this._DateOfService;
			}
			set
			{
				if ((this._DateOfService != value))
				{
					this.OnDateOfServiceChanging(value);
					this.SendPropertyChanging();
					this._DateOfService = value;
					this.SendPropertyChanged("DateOfService");
					this.OnDateOfServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionNumber", DbType="Int")]
		public System.Nullable<int> SessionNumber
		{
			get
			{
				return this._SessionNumber;
			}
			set
			{
				if ((this._SessionNumber != value))
				{
					this.OnSessionNumberChanging(value);
					this.SendPropertyChanging();
					this._SessionNumber = value;
					this.SendPropertyChanged("SessionNumber");
					this.OnSessionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStarted", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStarted
		{
			get
			{
				return this._TimeStarted;
			}
			set
			{
				if ((this._TimeStarted != value))
				{
					this.OnTimeStartedChanging(value);
					this.SendPropertyChanging();
					this._TimeStarted = value;
					this.SendPropertyChanged("TimeStarted");
					this.OnTimeStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnded", DbType="DateTime NOT NULL")]
		public System.DateTime TimeEnded
		{
			get
			{
				return this._TimeEnded;
			}
			set
			{
				if ((this._TimeEnded != value))
				{
					this.OnTimeEndedChanging(value);
					this.SendPropertyChanging();
					this._TimeEnded = value;
					this.SendPropertyChanged("TimeEnded");
					this.OnTimeEndedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteType", DbType="VarChar(50)")]
		public string NoteType
		{
			get
			{
				return this._NoteType;
			}
			set
			{
				if ((this._NoteType != value))
				{
					this.OnNoteTypeChanging(value);
					this.SendPropertyChanging();
					this._NoteType = value;
					this.SendPropertyChanged("NoteType");
					this.OnNoteTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextSession", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextSession
		{
			get
			{
				return this._NextSession;
			}
			set
			{
				if ((this._NextSession != value))
				{
					this.OnNextSessionChanging(value);
					this.SendPropertyChanging();
					this._NextSession = value;
					this.SendPropertyChanged("NextSession");
					this.OnNextSessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentGoalAddressed", DbType="VarChar(MAX)")]
		public string TreatmentGoalAddressed
		{
			get
			{
				return this._TreatmentGoalAddressed;
			}
			set
			{
				if ((this._TreatmentGoalAddressed != value))
				{
					this.OnTreatmentGoalAddressedChanging(value);
					this.SendPropertyChanging();
					this._TreatmentGoalAddressed = value;
					this.SendPropertyChanged("TreatmentGoalAddressed");
					this.OnTreatmentGoalAddressedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interventions", DbType="VarChar(MAX)")]
		public string Interventions
		{
			get
			{
				return this._Interventions;
			}
			set
			{
				if ((this._Interventions != value))
				{
					this.OnInterventionsChanging(value);
					this.SendPropertyChanging();
					this._Interventions = value;
					this.SendPropertyChanged("Interventions");
					this.OnInterventionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientResponse", DbType="VarChar(MAX)")]
		public string ClientResponse
		{
			get
			{
				return this._ClientResponse;
			}
			set
			{
				if ((this._ClientResponse != value))
				{
					this.OnClientResponseChanging(value);
					this.SendPropertyChanging();
					this._ClientResponse = value;
					this.SendPropertyChanged("ClientResponse");
					this.OnClientResponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeworkAssignedToday", DbType="VarChar(MAX)")]
		public string HomeworkAssignedToday
		{
			get
			{
				return this._HomeworkAssignedToday;
			}
			set
			{
				if ((this._HomeworkAssignedToday != value))
				{
					this.OnHomeworkAssignedTodayChanging(value);
					this.SendPropertyChanging();
					this._HomeworkAssignedToday = value;
					this.SendPropertyChanged("HomeworkAssignedToday");
					this.OnHomeworkAssignedTodayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeworkCompletedLastSession", DbType="VarChar(MAX)")]
		public string HomeworkCompletedLastSession
		{
			get
			{
				return this._HomeworkCompletedLastSession;
			}
			set
			{
				if ((this._HomeworkCompletedLastSession != value))
				{
					this.OnHomeworkCompletedLastSessionChanging(value);
					this.SendPropertyChanging();
					this._HomeworkCompletedLastSession = value;
					this.SendPropertyChanged("HomeworkCompletedLastSession");
					this.OnHomeworkCompletedLastSessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Appearance", DbType="Int NOT NULL")]
		public int Appearance
		{
			get
			{
				return this._Appearance;
			}
			set
			{
				if ((this._Appearance != value))
				{
					this.OnAppearanceChanging(value);
					this.SendPropertyChanging();
					this._Appearance = value;
					this.SendPropertyChanged("Appearance");
					this.OnAppearanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Behavior", DbType="Int NOT NULL")]
		public int Behavior
		{
			get
			{
				return this._Behavior;
			}
			set
			{
				if ((this._Behavior != value))
				{
					this.OnBehaviorChanging(value);
					this.SendPropertyChanging();
					this._Behavior = value;
					this.SendPropertyChanged("Behavior");
					this.OnBehaviorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoodAffect", DbType="Int NOT NULL")]
		public int MoodAffect
		{
			get
			{
				return this._MoodAffect;
			}
			set
			{
				if ((this._MoodAffect != value))
				{
					this.OnMoodAffectChanging(value);
					this.SendPropertyChanging();
					this._MoodAffect = value;
					this.SendPropertyChanged("MoodAffect");
					this.OnMoodAffectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognitions", DbType="Int NOT NULL")]
		public int Cognitions
		{
			get
			{
				return this._Cognitions;
			}
			set
			{
				if ((this._Cognitions != value))
				{
					this.OnCognitionsChanging(value);
					this.SendPropertyChanging();
					this._Cognitions = value;
					this.SendPropertyChanged("Cognitions");
					this.OnCognitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DangerToOthers", DbType="Bit NOT NULL")]
		public bool DangerToOthers
		{
			get
			{
				return this._DangerToOthers;
			}
			set
			{
				if ((this._DangerToOthers != value))
				{
					this.OnDangerToOthersChanging(value);
					this.SendPropertyChanging();
					this._DangerToOthers = value;
					this.SendPropertyChanged("DangerToOthers");
					this.OnDangerToOthersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescribeDanger", DbType="VarChar(MAX)")]
		public string DescribeDanger
		{
			get
			{
				return this._DescribeDanger;
			}
			set
			{
				if ((this._DescribeDanger != value))
				{
					this.OnDescribeDangerChanging(value);
					this.SendPropertyChanging();
					this._DescribeDanger = value;
					this.SendPropertyChanged("DescribeDanger");
					this.OnDescribeDangerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
